import { TableSchema } from "../types/TableSchema";
import { Structure } from "./Structure";
import ITableDataProps from '../interfaces/ITableDataProps';
export declare class Table<StructureData, TableData extends TableSchema<StructureData>> {
    name: string;
    path: string;
    structure: Structure<StructureData>;
    constructor(name: string, path: string, structure: Structure<StructureData>);
    data(): TableData[];
    create(props: TableData): TableData & ITableDataProps<TableData> | null;
    get(id: TableData["id"]): TableData & ITableDataProps<TableData> | undefined;
    find(func: (this: void, value: TableData, index: number, obj: TableData[]) => any, thisArg?: any): (TableData & ITableDataProps<TableData>) | undefined;
    remove(id: TableData["id"]): boolean;
    clear(): boolean;
}
